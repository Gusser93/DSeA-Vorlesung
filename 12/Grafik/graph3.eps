%!PS-Adobe-3.0 EPSF-3.0
%%Creator: graphviz version 2.38.0 (20140413.2041)
%%Title: G
%%Pages: 1
%%BoundingBox: 36 36 566 238
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval
EncodingVector 45 /hyphen put

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset graphviz 0 0
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
       dup 1 exch div /InvScaleFactor exch def
       scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def
/tapered { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw text fitted to its expected width
/alignedtext {			% width text
	/text exch def
	/width exch def
	gsave
		width 0 gt {
			[] 0 setdash
			text stringwidth pop width exch sub text length div 0 text ashow
		} if
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def
/showpage { } def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%! SDL shapes for Graphviz/dot in PostScript output mode

% FILE
%   sdl.ps  -  SDL shapes for Graphviz/dot in PostScript output mode
%
% USE
%   All procedures expect to be passed a rectangular bounding box in the
%   order [upper right, lower right, lower left, upper left, upper right].
%   All procedures expect to be used with "peripheries = 0".
%
% BUGS
%   The following shapes are currently not implemented:
%   - frame/system/block/process/procedure/service/procedure, and types thereof
%   - macro inlet/outlet/call
%   - exception handler/handle/raise
%   - decision (suggest use diamond)
%   - alternative (suggest use triangle)
%   - internal input/output (suggest stop using historical relics!)
%
% COPYRIGHT AND PERMISSION NOTICE
%   Copyright (C) 2005 Cambridge Silicon Radio Ltd.; all rights reserved.
%
%   Permission is hereby granted, free of charge, to any person obtaining
%   a copy of this software and associated documentation files (the
%   "Software"), to deal in the Software without restriction, including
%   without limitation the rights to use, copy, modify, merge, publish,
%   distribute, sublicense, and/or sell copies of the Software, and to
%   permit persons to whom the Software is furnished to do so, subject to
%   the following conditions:
%
%   The above copyright notice and this permission notice shall be
%   included in all copies or substantial portions of the Software.
%
%   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
%   EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
%   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
%   NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
%   LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
%   OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
%   WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
%
%   Except as contained in this notice, the name of a copyright holder
%   shall not be used in advertising or otherwise to promote the sale, use
%   or other dealings in the Software without prior written authorization
%   of the copyright holder.
%
% REVISION
%   #4

/xdef {exch def} bind def

% SDL task

/sdl_task {
        3 1 roll % put filled flag at end
        4 ne { stop } if % sanity-check number of sides
        aload pop
        newpath
        moveto
        lineto
        lineto
        lineto
        pop pop
        closepath
        { fill } { stroke } ifelse
} bind def

% SDL input from right
% The indent has lines at 45 degrees
% There should be a few spaces at the end of this shape's label

/sdl_input_from_right {
    9 dict begin
        3 1 roll % put filled flag at end
        4 ne { stop } if % sanity-check number of sides
        aload pop
        /ury xdef /urx xdef
        /lry xdef /lrx xdef
        /lly xdef /llx xdef
        /uly xdef /ulx xdef
        /h2 ury lry sub 2 div def
        newpath
        moveto
        urx h2 sub ury h2 sub lineto
        lrx lry lineto
        llx lly lineto
        ulx uly lineto
        closepath
        { fill } { stroke } ifelse
    end
} bind def

% SDL input from left
% Similar to SDL input from right
% There should be a few spaces at the start of this shape's label

/sdl_input_from_left {
    9 dict begin
        3 1 roll % put filled flag at end
        4 ne { stop } if % sanity-check number of sides
        aload pop
        /ury xdef /urx xdef
        /lry xdef /lrx xdef
        /lly xdef /llx xdef
        /uly xdef /ulx xdef
        /h2 uly lly sub 2 div def
        newpath
        moveto
        lrx lry lineto
        llx lly lineto
        ulx h2 add ury h2 sub lineto
        ulx uly lineto
        closepath
        { fill } { stroke } ifelse
    end
} bind def

% SDL priority input from right
% Similar to SDL input from right
% The chevrons are displaced by an eighth of the shape height
% The filled version is indistinguishable from a non-priority SDL input

/sdl_priority_input_from_right {
    9 dict begin
        3 1 roll % put filled flag at end
        4 ne { stop } if % sanity-check number of sides
        aload pop
        /ury xdef /urx xdef
        /lry xdef /lrx xdef
        /lly xdef /llx xdef
        /uly xdef /ulx xdef
        /h2 ury lry sub 2 div def
        newpath
        moveto
        urx h2 sub ury h2 sub lineto
        lrx lry lineto
        llx lly lineto
        ulx uly lineto
        closepath
        { fill } { stroke
        urx h2 4 div sub ury moveto
        urx h2 sub h2 4 div sub ury h2 sub lineto
        lrx h2 4 div sub lry lineto
        stroke } ifelse
    end
} bind def

% SDL priority input from left
% Similar to SDL priority input from right

/sdl_priority_input_from_left {
    9 dict begin
        3 1 roll % put filled flag at end
        4 ne { stop } if % sanity-check number of sides
        aload pop
        /ury xdef /urx xdef
        /lry xdef /lrx xdef
        /lly xdef /llx xdef
        /uly xdef /ulx xdef
        /h2 uly lly sub 2 div def
        newpath
        moveto
        lrx lry lineto
        llx lly lineto
        ulx h2 add uly h2 sub lineto
        ulx uly lineto
        closepath
        { fill } { stroke
        llx h2 4 div add lly moveto
        ulx h2 add h2 4 div add uly h2 sub lineto
        ulx h2 4 div add uly lineto
        stroke } ifelse
    end
} bind def

% SDL start
% The left and right sides are semicircles
% This should be used with "label = "                ""

/sdl_start {
    9 dict begin
        3 1 roll % put filled flag at end
        4 ne { stop } if % sanity-check number of sides
        aload pop
        /ury xdef /urx xdef
        /lry xdef /lrx xdef
        /lly xdef /llx xdef
        /uly xdef /ulx xdef
        pop pop
        /r ury lry sub 2 div def
        newpath
        urx r sub ury r sub r 90 -90 arcn
        ulx r add uly r sub r -90 90 arcn
        closepath
        { fill } { stroke } ifelse
    end
} bind def

% SDL procedure start
% Similar to SDL start
% The filled version is indistinguishable from an SDL start
% This should be used with "label = "                ""

/sdl_procedure_start {
    9 dict begin
        3 1 roll % put filled flag at end
        4 ne { stop } if % sanity-check number of sides
        aload pop
        /ury xdef /urx xdef
        /lry xdef /lrx xdef
        /lly xdef /llx xdef
        /uly xdef /ulx xdef
        pop pop
        /r ury lry sub 2 div def
        newpath
        urx r sub ury r sub r 90 -90 arcn
        ulx r add uly r sub r -90 90 arcn
        closepath
        { fill } { stroke
        lrx r sub lry moveto
        0 r 2 mul rlineto
        llx r add lly moveto
        0 r 2 mul rlineto
        stroke } ifelse
    end
} bind def

% SDL state/nextstate
% The left and right sides are arcs

/sdl_state {
    12 dict begin
        3 1 roll % put filled flag at end
        4 ne { stop } if % sanity-check number of sides
        aload pop
        /ury xdef /urx xdef
        /lry xdef /lrx xdef
        /lly xdef /llx xdef
        /uly xdef /ulx xdef
        pop pop
        /h2 ury lry sub 2 div def
        /w2 h2 1.5 mul def % was urx ulx sub 2 div def but this made curvature width-dependent
        /r w2 def
        /th h2 r dup mul h2 dup mul sub sqrt atan def
        newpath
        urx w2 sub ury h2 sub r th th neg arcn
        ulx w2 add uly h2 sub r -180 th add -180 th sub arcn
        closepath
        { fill } { stroke } ifelse
    end
} bind def

% SDL output to right
% The outdent has lines at 45 degrees
% There should be a few spaces at the end of this shape's label

/sdl_output_to_right {
    9 dict begin
        3 1 roll % put filled flag at end
        4 ne { stop } if % sanity-check number of sides
        aload pop
        /ury xdef /urx xdef
        /lry xdef /lrx xdef
        /lly xdef /llx xdef
        /uly xdef /ulx xdef
        /h2 ury lry sub 2 div def
        newpath
        exch h2 sub exch moveto
        urx ury h2 sub lineto
        lrx h2 sub lry lineto
        llx lly lineto
        ulx uly lineto
        closepath
        { fill } { stroke } ifelse
    end
} bind def

% SDL output to left
% Similar to SDL output to right
% There should be a few spaces at the start of this shape's label

/sdl_output_to_left {
    9 dict begin
        3 1 roll % put filled flag at end
        4 ne { stop } if % sanity-check number of sides
        aload pop
        /ury xdef /urx xdef
        /lry xdef /lrx xdef
        /lly xdef /llx xdef
        /uly xdef /ulx xdef
        /h2 ury lry sub 2 div def
        newpath
        moveto
        lrx lry lineto
        llx h2 add lly lineto
        ulx ury h2 sub lineto
        ulx h2 add uly lineto
        closepath
        { fill } { stroke } ifelse
    end
} bind def

% SDL continuous signal/enabling condition
% The chevrons have lines at 45 degrees
% There should be a few spaces at the start and end of this shape's label

/sdl_condition {
    9 dict begin
        3 1 roll % put filled flag at end
        4 ne { stop } if % sanity-check number of sides
        aload pop
        /ury xdef /urx xdef
        /lry xdef /lrx xdef
        /lly xdef /llx xdef
        /uly xdef /ulx xdef
        /h2 ury lry sub 2 div def
        newpath
        exch h2 sub exch moveto
        urx ury h2 sub lineto
        lrx h2 sub lry lineto
        dup llx h2 add lly 3 -1 roll { lineto } { moveto } ifelse
        ulx uly h2 sub lineto
        ulx h2 add uly lineto
        { fill } { stroke } ifelse
    end
} bind def

% SDL save
% The left and right edges are at about 60 degrees
% There should be a few spaces at the start and end of this shape's label

/sdl_save {
    9 dict begin
        3 1 roll % put filled flag at end
        4 ne { stop } if % sanity-check number of sides
        aload pop
        /ury xdef /urx xdef
        /lry xdef /lrx xdef
        /lly xdef /llx xdef
        /uly xdef /ulx xdef
        /h3 ury lry sub 3 div def
        newpath
        moveto
        lrx h3 sub lry lineto
        llx lly lineto
        ulx h3 add uly lineto
        closepath
        { fill } { stroke } ifelse
    end
} bind def

% SDL stop
% The width of the bounding box is ignored; the lines are set at 45 degrees
% This shape cannot be filled
% This should be used with "label = """ and "arrowhead = none, headclip = false"

/sdl_stop {
    7 dict begin
        { stop } if % make sure not asked to fill this
        4 ne { stop } if % sanity-check number of sides
        aload pop
        pop pop
        /lry xdef /lrx xdef
        /lly xdef /llx xdef
        /uly xdef pop
        /h2 uly lly sub 2 div def
        /mx llx lrx add 2 div def
        newpath
        mx h2 add exch moveto pop
        mx h2 sub lly lineto
        mx h2 sub uly moveto
        mx h2 add lry lineto
        closepath
        stroke
    end
} bind def

% SDL return
% The width of the bounding box is ignored; the lines are set at 45 degrees
% The filled version is indistinguishable from an SDL connection

/sdl_return {
    9 dict begin
        3 1 roll % put filled flag at end
        4 ne { stop } if % sanity-check number of sides
        aload pop
        /ury xdef pop
        /lry xdef /lrx xdef
        /lly xdef /llx xdef
        /uly xdef pop
        pop pop
        /h2 uly lly sub 2 div 2 sqrt div def
        /mx llx lrx add 2 div def
        /my lry ury add 2 div def
        newpath
        mx my uly lly sub 2 div 0 360 arc
        { fill } { stroke
        mx h2 add my h2 add moveto
        mx h2 sub my h2 sub lineto
        mx h2 sub my h2 add moveto
        mx h2 add my h2 sub lineto
        stroke } ifelse
    end
} bind def

% SDL create
% The extra lines are displaced by an eighth of the shape height
% The filled version is indistinguishable from an SDL task

/sdl_create {
    9 dict begin
        3 1 roll % put filled flag at end
        4 ne { stop } if % sanity-check number of sides
        aload pop
        /ury xdef /urx xdef
        /lry xdef /lrx xdef
        /lly xdef /llx xdef
        /uly xdef /ulx xdef
        /h8 ury lry sub 8 div def
        newpath
        moveto
        lrx lry lineto
        llx lly lineto
        ulx uly lineto
        closepath
        { fill } { stroke
        ulx uly h8 sub moveto
        urx ury h8 sub lineto
        llx lly h8 add moveto
        lrx lry h8 add lineto
        stroke } ifelse
    end
} bind def

% SDL call
% The extra lines are displaced by an eighth of the shape height
% The filled version is indistinguishable from an SDL task
% There should be a few spaces at the start and end of this shape's label

/sdl_call {
    9 dict begin
        3 1 roll % put filled flag at end
        4 ne { stop } if % sanity-check number of sides
        aload pop
        /ury xdef /urx xdef
        /lry xdef /lrx xdef
        /lly xdef /llx xdef
        /uly xdef /ulx xdef
        /h8 ury lry sub 8 div def
        newpath
        moveto
        lrx lry lineto
        llx lly lineto
        ulx uly lineto
        closepath
        { fill } { stroke
        urx h8 sub ury moveto
        lrx h8 sub lry lineto
        llx h8 add lly moveto
        ulx h8 add uly lineto
        stroke } ifelse
    end
} bind def

% SDL text symbol
% The corner has a size of twice the H height

/sdl_text {
    10 dict begin
        3 1 roll % put filled flag at end
        4 ne { stop } if % sanity-check number of sides
        aload pop
        /ury xdef /urx xdef
        /lry xdef /lrx xdef
        /lly xdef /llx xdef
        /uly xdef /ulx xdef
        /h8 ury lry sub 8 div def
        newpath
        moveto
        /d (H) true charpath flattenpath pathbbox exch pop exch sub exch pop 2 mul def
        newpath
        urx ury d sub moveto
        lrx lry lineto
        llx lly lineto
        ulx uly lineto
        urx d sub ury lineto
        closepath
        { fill } { stroke } ifelse
        urx ury d sub moveto
        d neg 0 rlineto
        0 d rlineto
        stroke
    end
} bind def

% SDL text extension from left
% This should be used with "rank = same"

/sdl_text_extension_from_left {
        3 1 roll % put filled flag at end
        4 ne { stop } if % sanity-check number of sides
        aload pop
        pop pop
        moveto
        lineto
        lineto
        lineto
        { fill } { stroke } ifelse
} bind def

% SDL text extension from right
% This should be used with "rank = same"

/sdl_text_extension_from_right {
        3 1 roll % put filled flag at end
        4 ne { stop } if % sanity-check number of sides
        aload pop
        pop pop
        8 4 roll
        moveto
        lineto
        lineto
        lineto
        { fill } { stroke } ifelse
} bind def

% SDL comment from left
% This should be used with "style = dashed" and "rank = same"

/sdl_comment_from_left { sdl_text_extension_from_left } bind def

% SDL comment from right
% This should be used with "style = dashed" and "rank = same"

/sdl_comment_from_right { sdl_text_extension_from_right } bind def

% SDL connector
% The width of the bounding box is ignored

/sdl_connector {
    7 dict begin
        3 1 roll % put filled flag at end
        4 ne { stop } if % sanity-check number of sides
        aload pop
        pop pop
        /lry xdef /lrx xdef
        /lly xdef /llx xdef
        /uly xdef pop
        pop pop
        /h2 uly lly sub 2 div def
        /mx llx lrx add 2 div def
        newpath
        mx uly h2 sub h2 0 360 arc
        { fill } { stroke } ifelse
    end
} bind def

% SDL set (extension)
% The hourglass has a size of twice the H height
% There should be a few spaces at the start of this shape's label

/sdl_set {
    10 dict begin
        3 1 roll % put filled flag at end
        4 ne { stop } if % sanity-check number of sides
        aload pop
        /ury xdef /urx xdef
        /lry xdef /lrx xdef
        /lly xdef /llx xdef
        /uly xdef /ulx xdef
        /my uly lly add 2 div def
        newpath
        moveto
        /d (H) true charpath flattenpath pathbbox exch pop exch sub exch pop def
        newpath
        llx d add my d add moveto
        ulx d add uly lineto
        urx ury lineto
        lrx lry lineto
        llx d add lly lineto
        llx d add my d sub lineto
        dup { closepath fill } { stroke } ifelse
        llx my d sub moveto
        d 2 mul dup rlineto
        d 2 mul neg 0 rlineto
        d 2 mul dup neg rlineto
        closepath
        { fill } { stroke } ifelse
    end
} bind def

% SDL reset (extension)
% The cross has a size of twice the H height
% There should be a few spaces at the start of this shape's label

/sdl_reset {
    10 dict begin
        3 1 roll % put filled flag at end
        4 ne { stop } if % sanity-check number of sides
        aload pop
        /ury xdef /urx xdef
        /lry xdef /lrx xdef
        /lly xdef /llx xdef
        /uly xdef /ulx xdef
        /my uly lly add 2 div def
        newpath
        moveto
        /d (H) true charpath flattenpath pathbbox exch pop exch sub exch pop def
        newpath
        urx ury moveto
        lrx lry lineto
        llx d add lly lineto
        ulx d add uly lineto
        closepath
        { fill } { stroke } ifelse
        llx my d sub moveto
        d 2 mul dup rlineto
        llx d 2 mul add my d sub moveto
        d 2 mul dup neg exch rlineto
        stroke
    end
} bind def

% SDL export (extension)
% The store has a width of twice the H height
% There should be a few spaces at the start of this shape's label

/sdl_export {
    10 dict begin
        3 1 roll % put filled flag at end
        4 ne { stop } if % sanity-check number of sides
        aload pop
        /ury xdef /urx xdef
        /lry xdef /lrx xdef
        /lly xdef /llx xdef
        /uly xdef /ulx xdef
        /my uly lly add 2 div def
        newpath
        moveto
        /d (H) true charpath flattenpath pathbbox exch pop exch sub exch pop def
        newpath
        llx d add my d 2 div add moveto
        ulx d add uly lineto
        urx ury lineto
        lrx lry lineto
        llx d add lly lineto
        llx d add my d 2 div sub lineto
        { closepath fill } { stroke } ifelse
        llx my d 2 div sub moveto
        d 2 mul 0 rlineto
        llx my d 2 div add moveto
        d 2 mul 0 rlineto
        stroke
    end
} bind def
setupLatin1
%%Page: 1 1
%%PageBoundingBox: 36 36 566 238
%%PageOrientation: Portrait
0 0 1 beginpage
gsave
36 36 530 202 boxprim clip newpath
1 1 set_scale 0 rotate 40 40 translate
% 1
gsave
1 setlinewidth
0 0 0 nodecolor
294 183.03 18 10.71 ellipse_path stroke
0 0 0 nodecolor
14 /Times-Roman set_font
292 179.33 moveto 4 ( ) alignedtext
grestore
% 2
gsave
1 setlinewidth
0 0 0 nodecolor
189 125.82 18 10.71 ellipse_path stroke
0 0 0 nodecolor
14 /Times-Roman set_font
187 122.12 moveto 4 ( ) alignedtext
grestore
% 1--2
gsave
1 setlinewidth
0 0 0 edgecolor
newpath 281.12 175.26 moveto
260.86 164.61 221.78 144.05 201.65 133.47 curveto
stroke
grestore
% 3
gsave
1 setlinewidth
0 0 0 nodecolor
366 125.82 18 10.71 ellipse_path stroke
0 0 0 nodecolor
14 /Times-Roman set_font
364 122.12 moveto 4 ( ) alignedtext
grestore
% 1--3
gsave
1 setlinewidth
0 0 0 edgecolor
newpath 304.32 174.12 moveto
318 163.63 342.03 145.2 355.7 134.72 curveto
stroke
grestore
% 4
gsave
1 setlinewidth
0 0 0 nodecolor
66 68.61 18 10.71 ellipse_path stroke
0 0 0 nodecolor
14 /Times-Roman set_font
64 64.91 moveto 4 ( ) alignedtext
grestore
% 2--4
gsave
1 setlinewidth
0 0 0 edgecolor
newpath 175.37 118.7 moveto
151.72 108.09 103.38 86.39 79.69 75.75 curveto
stroke
grestore
% 5
gsave
1 setlinewidth
0 0 0 nodecolor
159 68.61 18 10.71 ellipse_path stroke
0 0 0 nodecolor
14 /Times-Roman set_font
157 64.91 moveto 4 ( ) alignedtext
grestore
% 2--5
gsave
1 setlinewidth
0 0 0 edgecolor
newpath 183.91 115.45 moveto
178.36 105.24 169.53 88.99 164.01 78.83 curveto
stroke
grestore
% 6
gsave
1 setlinewidth
0 0 0 nodecolor
231 68.61 18 10.71 ellipse_path stroke
0 0 0 nodecolor
14 /Times-Roman set_font
229 64.91 moveto 4 ( ) alignedtext
grestore
% 2--6
gsave
1 setlinewidth
0 0 0 edgecolor
newpath 195.75 115.95 moveto
203.54 105.71 216.29 88.95 224.13 78.64 curveto
stroke
grestore
% 7
gsave
1 setlinewidth
0 0 0 nodecolor
366 68.61 18 10.71 ellipse_path stroke
0 0 0 nodecolor
14 /Times-Roman set_font
364 64.91 moveto 4 ( ) alignedtext
grestore
% 3--7
gsave
1 setlinewidth
0 0 0 edgecolor
newpath 366 115.2 moveto
366 105.19 366 89.59 366 79.49 curveto
stroke
grestore
% 8
gsave
1 setlinewidth
0 0 0 nodecolor
471 68.61 18 10.71 ellipse_path stroke
0 0 0 nodecolor
14 /Times-Roman set_font
469 64.91 moveto 4 ( ) alignedtext
grestore
% 3--8
gsave
1 setlinewidth
0 0 0 edgecolor
newpath 378.88 118.05 moveto
399.14 107.4 438.22 86.84 458.35 76.26 curveto
stroke
grestore
% 9
gsave
1 setlinewidth
0 0 0 nodecolor
newpath 12 22 moveto
0 22 lineto
0 0 lineto
12 0 lineto
closepath stroke
0 0 0 nodecolor
14 /Times-Roman set_font
0 7.3 moveto 12 (   ) alignedtext
grestore
% 4--9
gsave
1 setlinewidth
0 0 0 edgecolor
newpath 56.89 59.16 moveto
44.56 47.74 22.9 27.66 12.25 17.8 curveto
stroke
grestore
% 10
gsave
1 setlinewidth
0 0 0 nodecolor
newpath 42 22 moveto
30 22 lineto
30 0 lineto
42 0 lineto
closepath stroke
0 0 0 nodecolor
14 /Times-Roman set_font
30 7.3 moveto 12 (   ) alignedtext
grestore
% 4--10
gsave
1 setlinewidth
0 0 0 edgecolor
newpath 60.91 58.17 moveto
55.49 48.13 46.96 32.31 41.42 22.04 curveto
stroke
grestore
% 11
gsave
1 setlinewidth
0 0 0 nodecolor
newpath 72 22 moveto
60 22 lineto
60 0 lineto
72 0 lineto
closepath stroke
0 0 0 nodecolor
14 /Times-Roman set_font
60 7.3 moveto 12 (   ) alignedtext
grestore
% 4--11
gsave
1 setlinewidth
0 0 0 edgecolor
newpath 66 57.92 moveto
66 47.96 66 32.51 66 22.33 curveto
stroke
grestore
% 12
gsave
1 setlinewidth
0 0 0 nodecolor
newpath 102 22 moveto
90 22 lineto
90 0 lineto
102 0 lineto
closepath stroke
0 0 0 nodecolor
14 /Times-Roman set_font
90 7.3 moveto 12 (   ) alignedtext
grestore
% 4--12
gsave
1 setlinewidth
0 0 0 edgecolor
newpath 71.09 58.17 moveto
76.51 48.13 85.04 32.31 90.58 22.04 curveto
stroke
grestore
% 13
gsave
1 setlinewidth
0 0 0 nodecolor
newpath 132 22 moveto
120 22 lineto
120 0 lineto
132 0 lineto
closepath stroke
0 0 0 nodecolor
14 /Times-Roman set_font
120 7.3 moveto 12 (   ) alignedtext
grestore
% 5--13
gsave
1 setlinewidth
0 0 0 edgecolor
newpath 153.55 58.42 moveto
147.62 48.43 138.16 32.49 132.02 22.14 curveto
stroke
grestore
% 14
gsave
1 setlinewidth
0 0 0 nodecolor
newpath 162 22 moveto
150 22 lineto
150 0 lineto
162 0 lineto
closepath stroke
0 0 0 nodecolor
14 /Times-Roman set_font
150 7.3 moveto 12 (   ) alignedtext
grestore
% 5--14
gsave
1 setlinewidth
0 0 0 edgecolor
newpath 158.48 57.92 moveto
157.94 47.96 157.11 32.51 156.56 22.33 curveto
stroke
grestore
% 16
gsave
1 setlinewidth
0 0 0 nodecolor
newpath 192 22 moveto
180 22 lineto
180 0 lineto
192 0 lineto
closepath stroke
0 0 0 nodecolor
14 /Times-Roman set_font
180 7.3 moveto 12 (   ) alignedtext
grestore
% 5--16
gsave
1 setlinewidth
0 0 0 edgecolor
newpath 163.58 58.17 moveto
168.45 48.13 176.14 32.31 181.12 22.04 curveto
stroke
grestore
% 17
gsave
1 setlinewidth
0 0 0 nodecolor
newpath 222 22 moveto
210 22 lineto
210 0 lineto
222 0 lineto
closepath stroke
0 0 0 nodecolor
14 /Times-Roman set_font
210 7.3 moveto 12 (   ) alignedtext
grestore
% 6--17
gsave
1 setlinewidth
0 0 0 edgecolor
newpath 228.39 57.92 moveto
225.7 47.96 221.53 32.51 218.79 22.33 curveto
stroke
grestore
% 18
gsave
1 setlinewidth
0 0 0 nodecolor
newpath 252 22 moveto
240 22 lineto
240 0 lineto
252 0 lineto
closepath stroke
0 0 0 nodecolor
14 /Times-Roman set_font
240 7.3 moveto 12 (   ) alignedtext
grestore
% 6--18
gsave
1 setlinewidth
0 0 0 edgecolor
newpath 233.61 57.92 moveto
236.3 47.96 240.47 32.51 243.21 22.33 curveto
stroke
grestore
% 19
gsave
1 setlinewidth
0 0 0 nodecolor
newpath 282 22 moveto
270 22 lineto
270 0 lineto
282 0 lineto
closepath stroke
0 0 0 nodecolor
14 /Times-Roman set_font
270 7.3 moveto 12 (   ) alignedtext
grestore
% 6--19
gsave
1 setlinewidth
0 0 0 edgecolor
newpath 238.23 58.67 moveto
246.98 47.87 261.55 29.86 269.8 19.66 curveto
stroke
grestore
% 20
gsave
1 setlinewidth
0 0 0 nodecolor
newpath 312 22 moveto
300 22 lineto
300 0 lineto
312 0 lineto
closepath stroke
0 0 0 nodecolor
14 /Times-Roman set_font
300 7.3 moveto 12 (   ) alignedtext
grestore
% 7--20
gsave
1 setlinewidth
0 0 0 edgecolor
newpath 356.89 59.16 moveto
344.56 47.74 322.9 27.66 312.25 17.8 curveto
stroke
grestore
% 21
gsave
1 setlinewidth
0 0 0 nodecolor
newpath 342 22 moveto
330 22 lineto
330 0 lineto
342 0 lineto
closepath stroke
0 0 0 nodecolor
14 /Times-Roman set_font
330 7.3 moveto 12 (   ) alignedtext
grestore
% 7--21
gsave
1 setlinewidth
0 0 0 edgecolor
newpath 360.91 58.17 moveto
355.49 48.13 346.96 32.31 341.42 22.04 curveto
stroke
grestore
% 22
gsave
1 setlinewidth
0 0 0 nodecolor
newpath 372 22 moveto
360 22 lineto
360 0 lineto
372 0 lineto
closepath stroke
0 0 0 nodecolor
14 /Times-Roman set_font
360 7.3 moveto 12 (   ) alignedtext
grestore
% 7--22
gsave
1 setlinewidth
0 0 0 edgecolor
newpath 366 57.92 moveto
366 47.96 366 32.51 366 22.33 curveto
stroke
grestore
% 23
gsave
1 setlinewidth
0 0 0 nodecolor
newpath 402 22 moveto
390 22 lineto
390 0 lineto
402 0 lineto
closepath stroke
0 0 0 nodecolor
14 /Times-Roman set_font
390 7.3 moveto 12 (   ) alignedtext
grestore
% 7--23
gsave
1 setlinewidth
0 0 0 edgecolor
newpath 371.09 58.17 moveto
376.51 48.13 385.04 32.31 390.58 22.04 curveto
stroke
grestore
% 24
gsave
1 setlinewidth
0 0 0 nodecolor
newpath 432 22 moveto
420 22 lineto
420 0 lineto
432 0 lineto
closepath stroke
0 0 0 nodecolor
14 /Times-Roman set_font
420 7.3 moveto 12 (   ) alignedtext
grestore
% 7--24
gsave
1 setlinewidth
0 0 0 edgecolor
newpath 375.11 59.16 moveto
387.44 47.74 409.1 27.66 419.75 17.8 curveto
stroke
grestore
% 25
gsave
1 setlinewidth
0 0 0 nodecolor
newpath 462 22 moveto
450 22 lineto
450 0 lineto
462 0 lineto
closepath stroke
0 0 0 nodecolor
14 /Times-Roman set_font
450 7.3 moveto 12 (   ) alignedtext
grestore
% 8--25
gsave
1 setlinewidth
0 0 0 edgecolor
newpath 468.39 57.92 moveto
465.7 47.96 461.53 32.51 458.79 22.33 curveto
stroke
grestore
% 26
gsave
1 setlinewidth
0 0 0 nodecolor
newpath 492 22 moveto
480 22 lineto
480 0 lineto
492 0 lineto
closepath stroke
0 0 0 nodecolor
14 /Times-Roman set_font
480 7.3 moveto 12 (   ) alignedtext
grestore
% 8--26
gsave
1 setlinewidth
0 0 0 edgecolor
newpath 473.61 57.92 moveto
476.3 47.96 480.47 32.51 483.21 22.33 curveto
stroke
grestore
% 27
gsave
1 setlinewidth
0 0 0 nodecolor
newpath 522 22 moveto
510 22 lineto
510 0 lineto
522 0 lineto
closepath stroke
0 0 0 nodecolor
14 /Times-Roman set_font
510 7.3 moveto 12 (   ) alignedtext
grestore
% 8--27
gsave
1 setlinewidth
0 0 0 edgecolor
newpath 478.23 58.67 moveto
486.98 47.87 501.55 29.86 509.8 19.66 curveto
stroke
grestore
endpage
showpage
grestore
%%PageTrailer
%%EndPage: 1
%%Trailer
end
restore
%%EOF
